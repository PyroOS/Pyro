os::String cDataTab1 = os::String( "Data" );
for( uint8 i = 0 ; i < 50 - strlen(cDataTab1.c_str()) ; i++ )
	cDataTab1 = cDataTab1 + os::String(" ");
os::String cDataTab2 = os::String( "Burn" );
for( uint8 i = 0 ; i < 50 - strlen(cDataTab2.c_str()) ; i++ )
	cDataTab2 = cDataTab2 + os::String(" ");

m_pcData = new os::VLayoutNode( "Data", 1.000000 );
m_pcData->SetBorders( os::Rect( 5.000000, 5.000000, 5.000000, 5.000000 ) );
m_pcDataTabView = new os::TabView( os::Rect(), "DataTabView" );
m_pcDataAuthorTab = new os::LayoutView( os::Rect(), "DataAuthorTab" );
m_pcDataAuthorLayout = new os::VLayoutNode( "DataAuthorLayout" );
m_pcDataTabView->AppendTab( cDataTab1, m_pcDataAuthorTab );
m_pcDataBurnTab = new os::LayoutView( os::Rect(), "DataBurnTab" );
m_pcDataBurnLayout = new os::VLayoutNode( "DataBurnLayout" );
m_pcDataTabView->AppendTab( cDataTab2, m_pcDataBurnTab );
m_pcData->AddChild( m_pcDataTabView, 1.000000 );
m_pcDataAuthor = new os::VLayoutNode( "DataAuthor", 1.000000 );
m_pcDataAuthor->SetBorders( os::Rect( 5.000000, 5.000000, 5.000000, 5.000000 ) );
m_pcDataAuthorLayout->AddChild( m_pcDataAuthor );
m_pcDataSpacerTop = new os::VLayoutSpacer( "DataSpacerTop", 0.000000, 100000.000000, NULL, 1.000000 );
m_pcDataAuthor->AddChild( m_pcDataSpacerTop );
m_pcDataMiddle = new os::HLayoutNode( "DataMiddle", 0.100000 );
m_pcDataMiddle->SetBorders( os::Rect( 0.000000, 0.000000, 0.000000, 0.000000 ) );
m_pcDataAuthor->AddChild( m_pcDataMiddle );
m_pcDataSpacerLeft = new os::HLayoutSpacer( "DataSpacerLeft", 0.000000, 100000.000000, NULL, 1.000000 );
m_pcDataMiddle->AddChild( m_pcDataSpacerLeft );
m_pcDataMain = new os::VLayoutNode( "DataMain", 2.000000 );
m_pcDataMain->SetBorders( os::Rect( 0.000000, 0.000000, 0.000000, 0.000000 ) );
m_pcDataMiddle->AddChild( m_pcDataMain );
m_pcDataAddButton = new os::Button( os::Rect(), "DataAddButton", "Select dir.", new os::Message( M_DATA_ADD ) );
m_pcDataMain->AddChild( m_pcDataAddButton, 1.000000 );
m_pcDataAddPath = new os::TextView( os::Rect(), "DataAddPath", "" );
m_pcDataMain->AddChild( m_pcDataAddPath, 1.000000 );
m_pcDataSpacerRight = new os::HLayoutSpacer( "DataSpacerRight", 0.000000, 100000.000000, NULL, 1.000000 );
m_pcDataMiddle->AddChild( m_pcDataSpacerRight );
m_pcDataSpacerButtom = new os::VLayoutSpacer( "DataSpacerButtom", 0.000000, 100000.000000, NULL, 1.000000 );
m_pcDataAuthor->AddChild( m_pcDataSpacerButtom );
m_pcDataBurn = new os::VLayoutNode( "DataBurn", 1.000000 );
m_pcDataBurn->SetBorders( os::Rect( 5.000000, 5.000000, 5.000000, 5.000000 ) );
m_pcDataBurnLayout->AddChild( m_pcDataBurn );
m_pcDataWriteDevice = new os::HLayoutNode( "DataWriteDevice", 1.000000 );
m_pcDataWriteDevice->SetBorders( os::Rect( 0.000000, 0.000000, 0.000000, 0.000000 ) );
m_pcDataBurn->AddChild( m_pcDataWriteDevice );
m_pcDataWriteDeviceString = new os::StringView( os::Rect(), "DataWriteDeviceString", "Device:" );
m_pcDataWriteDevice->AddChild( m_pcDataWriteDeviceString, 1.000000 );
m_pcDataWriteDeviceSelection = new os::DropdownMenu( os::Rect(), "DataWriteDeviceSelection" );
m_pcDataWriteDeviceSelection->SetSelectionMessage( new os::Message( M_DATA_WRITEDEVICE ) );
m_pcDataWriteDeviceSelection->SetReadOnly( true );
m_pcDataWriteDeviceSelection->AppendItem( "Choose Device..." );
m_pcDataWriteDeviceSelection->AppendItem( "ISO File" );
m_pcDataWriteDeviceSelection->SetSelection( (int) 0 );
m_pcDataWriteDevice->AddChild( m_pcDataWriteDeviceSelection, 1.000000 );
m_pcDataBurnSpacer1 = new os::VLayoutSpacer( "DataBurnSpacer1", 0.000000, 100000.000000, NULL, 1.000000 );
m_pcDataBurn->AddChild( m_pcDataBurnSpacer1 );
m_pcDataSpeed = new os::VLayoutNode( "DataSpeed", 1.000000 );
m_pcDataSpeed->SetBorders( os::Rect( 0.000000, 0.000000, 0.000000, 0.000000 ) );
m_pcDataBurn->AddChild( m_pcDataSpeed );
m_pcDataSpeedSelection = new os::HLayoutNode( "DataSpeedSelection", 1.000000 );
m_pcDataSpeedSelection->SetBorders( os::Rect( 0.000000, 0.000000, 0.000000, 0.000000 ) );
m_pcDataSpeed->AddChild( m_pcDataSpeedSelection );
m_pcDataSpeedString = new os::StringView( os::Rect(), "DataSpeedString", "Write-speed:" );
m_pcDataSpeedSelection->AddChild( m_pcDataSpeedString, 1.000000 );
m_pcDataSpeedSlider = new os::Slider( os::Rect(), "DataSpeedSlider", new os::Message( M_DATA_SPEED ), os::Slider::TICKS_BELOW, 10, os::Slider::KNOB_SQUARE, os::HORIZONTAL );
m_pcDataSpeedSlider->SetStepCount( 26 );
m_pcDataSpeedSlider->SetTickCount( 11 );
m_pcDataSpeedSlider->SetLimitLabels( "1x", "50x" );
m_pcDataSpeedSlider->SetMinMax( 1.000000, 50.000000 );
m_pcDataSpeedSelection->AddChild( m_pcDataSpeedSlider, 1.000000 );
m_pcDataSpeedCheckBox = new os::CheckBox( os::Rect(), "DataSpeedCheckBox", "Max. write-speed.", new os::Message( M_DATA_MAXSPEED ) );
m_pcDataSpeedCheckBox->SetValue( true );
m_pcDataSpeed->AddChild( m_pcDataSpeedCheckBox, 1.000000 );
m_pcDataBurnSpacer2 = new os::VLayoutSpacer( "DataBurnSpacer2", 0.000000, 100000.000000, NULL, 1.000000 );
m_pcDataBurn->AddChild( m_pcDataBurnSpacer2 );
m_pcDataCopies = new os::HLayoutNode( "DataCopies", 1.000000 );
m_pcDataCopies->SetBorders( os::Rect( 0.000000, 0.000000, 0.000000, 0.000000 ) );
m_pcDataBurn->AddChild( m_pcDataCopies );
m_pcDataCopiesString = new os::StringView( os::Rect(), "DataCopiesString", "Number of copies to burn:" );
m_pcDataCopies->AddChild( m_pcDataCopiesString, 1.000000 );
m_pcDataCopiesSpinner = new os::Spinner( os::Rect(), "DataCopiesSpinner", 1.000000, new os::Message( M_DATA_COPIES ) );
m_pcDataCopiesSpinner->SetMinMax( 1.000000, 25.000000 );
m_pcDataCopiesSpinner->SetStep( 1.000000 );
m_pcDataCopiesSpinner->SetFormat( "%.0f" );
m_pcDataCopies->AddChild( m_pcDataCopiesSpinner, 0.200000 );
m_pcDataBurnSpacer3 = new os::VLayoutSpacer( "DataBurnSpacer3", 0.000000, 100000.000000, NULL, 1.000000 );
m_pcDataBurn->AddChild( m_pcDataBurnSpacer3 );
m_pcDataDiskName = new os::HLayoutNode( "DataDiskName", 1.000000 );
m_pcDataDiskName->SetBorders( os::Rect( 0.000000, 0.000000, 0.000000, 0.000000 ) );
m_pcDataBurn->AddChild( m_pcDataDiskName );
m_pcDataDiskNameString = new os::StringView( os::Rect(), "DataDiskNameString", "Volume Name:" );
m_pcDataDiskName->AddChild( m_pcDataDiskNameString, 1.000000 );
m_pcDataDiskNameText = new os::TextView( os::Rect(), "DataDiskNameText", "Data" );
m_pcDataDiskName->AddChild( m_pcDataDiskNameText, 1.000000 );
m_pcDataBurnSpacer4 = new os::VLayoutSpacer( "DataBurnSpacer4", 0.000000, 100000.000000, NULL, 1.000000 );
m_pcDataBurn->AddChild( m_pcDataBurnSpacer4 );
m_pcDataButton = new os::HLayoutNode( "DataButton", 0.000001 );
m_pcDataButton->SetBorders( os::Rect( 0.000000, 0.000000, 0.000000, 0.000000 ) );
m_pcDataBurn->AddChild( m_pcDataButton );
m_pcDataBurnSpacer5 = new os::HLayoutSpacer( "DataBurnSpacer5", 0.000000, 100000.000000, NULL, 1.000000 );
m_pcDataButton->AddChild( m_pcDataBurnSpacer5 );
os::File cDataBurnButtonFile( open_image_file( get_image_id() ) );
os::Resources cDataBurnButtonResources( &cDataBurnButtonFile );
os::ResStream* pcDataBurnButtonStream = cDataBurnButtonResources.GetResourceStream( "burn.png" );
m_pcDataBurnButton = new os::ImageButton( os::Rect(), "DataBurnButton", "Burn", new os::Message( M_DATA_BURN ), new os::BitmapImage( pcDataBurnButtonStream ), os::ImageButton::IB_TEXT_RIGHT, true, true, false );
delete( pcDataBurnButtonStream );
m_pcDataButton->AddChild( m_pcDataBurnButton, 0.000001 );
m_pcDataAuthorTab->SetRoot( m_pcDataAuthorLayout );
m_pcDataBurnTab->SetRoot( m_pcDataBurnLayout );

