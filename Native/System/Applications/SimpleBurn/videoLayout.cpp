os::String cVideoTab1 = os::String( "Video" );
for( uint8 i = 0 ; i < 50 - strlen(cVideoTab1.c_str()) ; i++ )
	cVideoTab1 = cVideoTab1 + os::String(" ");
os::String cVideoTab2 = os::String( "Burn" );
for( uint8 i = 0 ; i < 50 - strlen(cVideoTab2.c_str()) ; i++ )
	cVideoTab2 = cVideoTab2 + os::String(" ");

m_pcVideo = new os::VLayoutNode( "Video", 1.000000 );
m_pcVideo->SetBorders( os::Rect( 5.000000, 5.000000, 5.000000, 5.000000 ) );
m_pcVideoTabView = new os::TabView( os::Rect(), "VideoTabView" );
m_pcVideoAuthorTab = new os::LayoutView( os::Rect(), "VideoAuthorTab" );
m_pcVideoAuthorLayout = new os::VLayoutNode( "VideoAuthorLayout" );
m_pcVideoTabView->AppendTab( cVideoTab1, m_pcVideoAuthorTab );
m_pcVideoBurnTab = new os::LayoutView( os::Rect(), "VideoBurnTab" );
m_pcVideoBurnLayout = new os::VLayoutNode( "VideoBurnLayout" );
m_pcVideoTabView->AppendTab( cVideoTab2, m_pcVideoBurnTab );
m_pcVideo->AddChild( m_pcVideoTabView, 1.000000 );
m_pcVideoAuthor = new os::VLayoutNode( "VideoAuthor", 1.000000 );
m_pcVideoAuthor->SetBorders( os::Rect( 5.000000, 5.000000, 5.000000, 5.000000 ) );
m_pcVideoAuthorLayout->AddChild( m_pcVideoAuthor );
m_pcVideoList = new os::ListView( os::Rect(), "VideoList", os::ListView::F_MULTI_SELECT | os::ListView::F_RENDER_BORDER );
m_pcVideoList->InsertColumn( "Time", 60 );
m_pcVideoList->InsertColumn( "Video Files", 0 );
m_pcVideoAuthor->AddChild( m_pcVideoList, 1.000000 );
m_pcVideoNode = new os::HLayoutNode( "VideoNode", 0.000001 );
m_pcVideoNode->SetBorders( os::Rect( 0.000000, 10.000000, 0.000000, 0.000000 ) );
m_pcVideoAuthor->AddChild( m_pcVideoNode );
os::File cVideoAddFile( open_image_file( get_image_id() ) );
os::Resources cVideoAddResources( &cVideoAddFile );
os::ResStream* pcVideoAddStream = cVideoAddResources.GetResourceStream( "add-video.png" );
m_pcVideoAdd = new os::ImageButton( os::Rect(), "VideoAdd", "", new os::Message( M_VIDEO_ADD ), new os::BitmapImage( pcVideoAddStream ), os::ImageButton::IB_TEXT_BOTTOM, true, true, true );
delete( pcVideoAddStream );
m_pcVideoNode->AddChild( m_pcVideoAdd, 0.000001 );
m_pcVideoSpacer1 = new os::HLayoutSpacer( "VideoSpacer1", 2.000000, 2.000000, NULL, 1.000000 );
m_pcVideoNode->AddChild( m_pcVideoSpacer1 );
os::File cVideoRemoveFile( open_image_file( get_image_id() ) );
os::Resources cVideoRemoveResources( &cVideoRemoveFile );
os::ResStream* pcVideoRemoveStream = cVideoRemoveResources.GetResourceStream( "remove.png" );
m_pcVideoRemove = new os::ImageButton( os::Rect(), "VideoRemove", "", new os::Message( M_VIDEO_REMOVE ), new os::BitmapImage( pcVideoRemoveStream ), os::ImageButton::IB_TEXT_BOTTOM, true, true, true );
delete( pcVideoRemoveStream );
m_pcVideoNode->AddChild( m_pcVideoRemove, 0.000001 );
m_pcVideoSeparatorLeft = new os::Separator( os::Rect(), "VideoSeparatorLeft", os::VERTICAL );
m_pcVideoNode->AddChild( m_pcVideoSeparatorLeft, 1.000000 );
m_pcVideoTime = new os::TextView( os::Rect(), "VideoTime", "00:00:00" );
m_pcVideoTime->SetReadOnly( true );
m_pcVideoNode->AddChild( m_pcVideoTime, 2.000000 );
m_pcVideoSpacer2 = new os::HLayoutSpacer( "VideoSpacer2", 10.000000, 10.000000, NULL, 1.000000 );
m_pcVideoNode->AddChild( m_pcVideoSpacer2 );
m_pcVideoTypeSelection = new os::DropdownMenu( os::Rect(), "VideoTypeSelection" );
m_pcVideoTypeSelection->SetSelectionMessage( new os::Message( M_VIDEO_TYPE ) );
m_pcVideoTypeSelection->SetReadOnly( true );
m_pcVideoTypeSelection->AppendItem( "Select disk-type" );
m_pcVideoTypeSelection->SetSelection( (int) 0 );
m_pcVideoNode->AddChild( m_pcVideoTypeSelection, 1.000000 );
m_pcVideoSeparatorRight = new os::Separator( os::Rect(), "VideoSeparatorRight", os::VERTICAL );
m_pcVideoNode->AddChild( m_pcVideoSeparatorRight, 1.000000 );
os::File cVideoUpFile( open_image_file( get_image_id() ) );
os::Resources cVideoUpResources( &cVideoUpFile );
os::ResStream* pcVideoUpStream = cVideoUpResources.GetResourceStream( "move-up.png" );
m_pcVideoUp = new os::ImageButton( os::Rect(), "VideoUp", "", new os::Message( M_VIDEO_UP ), new os::BitmapImage( pcVideoUpStream ), os::ImageButton::IB_TEXT_BOTTOM, true, true, true );
delete( pcVideoUpStream );
m_pcVideoNode->AddChild( m_pcVideoUp, 0.000001 );
m_pcVideoSpacer3 = new os::HLayoutSpacer( "VideoSpacer3", 2.000000, 2.000000, NULL, 1.000000 );
m_pcVideoNode->AddChild( m_pcVideoSpacer3 );
os::File cVideoDownFile( open_image_file( get_image_id() ) );
os::Resources cVideoDownResources( &cVideoDownFile );
os::ResStream* pcVideoDownStream = cVideoDownResources.GetResourceStream( "move-down.png" );
m_pcVideoDown = new os::ImageButton( os::Rect(), "VideoDown", "", new os::Message( M_VIDEO_DOWN ), new os::BitmapImage( pcVideoDownStream ), os::ImageButton::IB_TEXT_BOTTOM, true, true, true );
delete( pcVideoDownStream );
m_pcVideoNode->AddChild( m_pcVideoDown, 0.000001 );
m_pcVideoBurn = new os::VLayoutNode( "VideoBurn", 1.000000 );
m_pcVideoBurn->SetBorders( os::Rect( 5.000000, 5.000000, 5.000000, 5.000000 ) );
m_pcVideoBurnLayout->AddChild( m_pcVideoBurn );
m_pcVideoWriteDevice = new os::HLayoutNode( "VideoWriteDevice", 1.000000 );
m_pcVideoWriteDevice->SetBorders( os::Rect( 0.000000, 0.000000, 0.000000, 0.000000 ) );
m_pcVideoBurn->AddChild( m_pcVideoWriteDevice );
m_pcVideoWriteDeviceString = new os::StringView( os::Rect(), "VideoWriteDeviceString", "Device:" );
m_pcVideoWriteDevice->AddChild( m_pcVideoWriteDeviceString, 1.000000 );
m_pcVideoWriteDeviceSelection = new os::DropdownMenu( os::Rect(), "VideoWriteDeviceSelection" );
m_pcVideoWriteDeviceSelection->SetSelectionMessage( new os::Message( M_VIDEO_WRITEDEVICE ) );
m_pcVideoWriteDeviceSelection->SetReadOnly( true );
m_pcVideoWriteDeviceSelection->AppendItem( "Choose Device..." );
m_pcVideoWriteDeviceSelection->SetSelection( (int) 0 );
m_pcVideoWriteDevice->AddChild( m_pcVideoWriteDeviceSelection, 1.000000 );
m_pcVideoBurnSpacer1 = new os::VLayoutSpacer( "VideoBurnSpacer1", 0.000000, 100000.000000, NULL, 1.000000 );
m_pcVideoBurn->AddChild( m_pcVideoBurnSpacer1 );
m_pcVideoSpeed = new os::VLayoutNode( "VideoSpeed", 1.000000 );
m_pcVideoSpeed->SetBorders( os::Rect( 0.000000, 0.000000, 0.000000, 0.000000 ) );
m_pcVideoBurn->AddChild( m_pcVideoSpeed );
m_pcVideoSpeedSelection = new os::HLayoutNode( "VideoSpeedSelection", 1.000000 );
m_pcVideoSpeedSelection->SetBorders( os::Rect( 0.000000, 0.000000, 0.000000, 0.000000 ) );
m_pcVideoSpeed->AddChild( m_pcVideoSpeedSelection );
m_pcVideoSpeedString = new os::StringView( os::Rect(), "VideoSpeedString", "Write-speed:" );
m_pcVideoSpeedSelection->AddChild( m_pcVideoSpeedString, 1.000000 );
m_pcVideoSpeedSlider = new os::Slider( os::Rect(), "VideoSpeedSlider", new os::Message( M_VIDEO_SPEED ), os::Slider::TICKS_BELOW, 10, os::Slider::KNOB_SQUARE, os::HORIZONTAL );
m_pcVideoSpeedSlider->SetStepCount( 26 );
m_pcVideoSpeedSlider->SetTickCount( 11 );
m_pcVideoSpeedSlider->SetLimitLabels( "1x", "50x" );
m_pcVideoSpeedSlider->SetMinMax( 1.000000, 50.000000 );
m_pcVideoSpeedSelection->AddChild( m_pcVideoSpeedSlider, 1.000000 );
m_pcVideoSpeedCheckBox = new os::CheckBox( os::Rect(), "VideoSpeedCheckBox", "Max. write-speed.", new os::Message( M_VIDEO_MAXSPEED ) );
m_pcVideoSpeedCheckBox->SetValue( true );
m_pcVideoSpeed->AddChild( m_pcVideoSpeedCheckBox, 1.000000 );
m_pcVideoBurnSpacer2 = new os::VLayoutSpacer( "VideoBurnSpacer2", 0.000000, 100000.000000, NULL, 1.000000 );
m_pcVideoBurn->AddChild( m_pcVideoBurnSpacer2 );
m_pcVideoCopies = new os::HLayoutNode( "VideoCopies", 1.000000 );
m_pcVideoCopies->SetBorders( os::Rect( 0.000000, 0.000000, 0.000000, 0.000000 ) );
m_pcVideoBurn->AddChild( m_pcVideoCopies );
m_pcVideoCopiesString = new os::StringView( os::Rect(), "VideoCopiesString", "Number of copies to burn:" );
m_pcVideoCopies->AddChild( m_pcVideoCopiesString, 1.000000 );
m_pcVideoCopiesSpinner = new os::Spinner( os::Rect(), "VideoCopiesSpinner", 1.000000, new os::Message( M_VIDEO_COPIES ) );
m_pcVideoCopiesSpinner->SetMinMax( 1.000000, 25.000000 );
m_pcVideoCopiesSpinner->SetStep( 1.000000 );
m_pcVideoCopiesSpinner->SetFormat( "%.0f" );
m_pcVideoCopies->AddChild( m_pcVideoCopiesSpinner, 0.200000 );
m_pcVideoBurnSpacer3 = new os::VLayoutSpacer( "VideoBurnSpacer3", 0.000000, 100000.000000, NULL, 1.000000 );
m_pcVideoBurn->AddChild( m_pcVideoBurnSpacer3 );
m_pcVideoDiskName = new os::HLayoutNode( "VideoDiskName", 1.000000 );
m_pcVideoDiskName->SetBorders( os::Rect( 0.000000, 0.000000, 0.000000, 0.000000 ) );
m_pcVideoBurn->AddChild( m_pcVideoDiskName );
m_pcVideoDiskNameString = new os::StringView( os::Rect(), "VideoDiskNameString", "Volume Name:" );
m_pcVideoDiskName->AddChild( m_pcVideoDiskNameString, 1.000000 );
m_pcVideoDiskNameText = new os::TextView( os::Rect(), "VideoDiskNameText", "Video" );
m_pcVideoDiskName->AddChild( m_pcVideoDiskNameText, 1.000000 );
m_pcVideoBurnSpacer4 = new os::VLayoutSpacer( "VideoBurnSpacer4", 0.000000, 100000.000000, NULL, 1.000000 );
m_pcVideoBurn->AddChild( m_pcVideoBurnSpacer4 );
m_pcVideoButton = new os::HLayoutNode( "VideoButton", 0.000001 );
m_pcVideoButton->SetBorders( os::Rect( 0.000000, 0.000000, 0.000000, 0.000000 ) );
m_pcVideoBurn->AddChild( m_pcVideoButton );
m_pcVideoBurnSpacer5 = new os::HLayoutSpacer( "VideoBurnSpacer5", 0.000000, 100000.000000, NULL, 1.000000 );
m_pcVideoButton->AddChild( m_pcVideoBurnSpacer5 );
os::File cVideoBurnButtonFile( open_image_file( get_image_id() ) );
os::Resources cVideoBurnButtonResources( &cVideoBurnButtonFile );
os::ResStream* pcVideoBurnButtonStream = cVideoBurnButtonResources.GetResourceStream( "burn.png" );
m_pcVideoBurnButton = new os::ImageButton( os::Rect(), "VideoBurnButton", "Burn", new os::Message( M_VIDEO_BURN ), new os::BitmapImage( pcVideoBurnButtonStream ), os::ImageButton::IB_TEXT_RIGHT, true, true, false );
delete( pcVideoBurnButtonStream );
m_pcVideoButton->AddChild( m_pcVideoBurnButton, 0.000001 );
m_pcVideoAuthorTab->SetRoot( m_pcVideoAuthorLayout );
m_pcVideoBurnTab->SetRoot( m_pcVideoBurnLayout );

