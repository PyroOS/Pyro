os::String cBurnTab1 = os::String( "Burn" );
for( uint8 i = 0 ; i < 50 - strlen(cBurnTab1.c_str()) ; i++ )
	cBurnTab1 = cBurnTab1 + os::String(" ");
os::String cBurnTab2 = os::String( "Erase" );
for( uint8 i = 0 ; i < 50 - strlen(cBurnTab2.c_str()) ; i++ )
	cBurnTab2 = cBurnTab2 + os::String(" ");

m_pcBurn = new os::VLayoutNode( "Burn", 1.000000 );
m_pcBurn->SetBorders( os::Rect( 5.000000, 5.000000, 5.000000, 5.000000 ) );
m_pcBurnTabView = new os::TabView( os::Rect(), "BurnTabView" );
m_pcBurnBurnTab = new os::LayoutView( os::Rect(), "BurnBurnTab" );
m_pcBurnBurnLayout = new os::VLayoutNode( "BurnBurnLayout" );
m_pcBurnTabView->AppendTab( cBurnTab1, m_pcBurnBurnTab );
m_pcBurnEraseTab = new os::LayoutView( os::Rect(), "BurnEraseTab" );
m_pcBurnEraseLayout = new os::VLayoutNode( "BurnEraseLayout" );
m_pcBurnTabView->AppendTab( cBurnTab2, m_pcBurnEraseTab );
m_pcBurn->AddChild( m_pcBurnTabView, 1.000000 );
m_pcBurnBurn = new os::VLayoutNode( "BurnBurn", 1.000000 );
m_pcBurnBurn->SetBorders( os::Rect( 5.000000, 5.000000, 5.000000, 5.000000 ) );
m_pcBurnBurnLayout->AddChild( m_pcBurnBurn );
m_pcBurnReadDevice = new os::HLayoutNode( "BurnReadDevice", 1.000000 );
m_pcBurnReadDevice->SetBorders( os::Rect( 0.000000, 0.000000, 0.000000, 0.000000 ) );
m_pcBurnBurn->AddChild( m_pcBurnReadDevice );
m_pcBurnReadDeviceString = new os::StringView( os::Rect(), "BurnReadDeviceString", "Read Device:" );
m_pcBurnReadDevice->AddChild( m_pcBurnReadDeviceString, 1.000000 );
m_pcBurnReadDeviceSelection = new os::DropdownMenu( os::Rect(), "BurnReadDeviceSelection" );
m_pcBurnReadDeviceSelection->SetSelectionMessage( new os::Message( M_BURN_READDEVICE ) );
m_pcBurnReadDeviceSelection->SetReadOnly( true );
m_pcBurnReadDeviceSelection->AppendItem( "Choose Device..." );
m_pcBurnReadDeviceSelection->AppendItem( "ISO File" );
m_pcBurnReadDeviceSelection->SetSelection( (int) 0 );
m_pcBurnReadDevice->AddChild( m_pcBurnReadDeviceSelection, 1.000000 );
m_pcBurnWriteDevice = new os::HLayoutNode( "BurnWriteDevice", 1.000000 );
m_pcBurnWriteDevice->SetBorders( os::Rect( 0.000000, 0.000000, 0.000000, 0.000000 ) );
m_pcBurnBurn->AddChild( m_pcBurnWriteDevice );
m_pcBurnWriteDeviceString = new os::StringView( os::Rect(), "BurnWriteDeviceString", "Write Device:" );
m_pcBurnWriteDevice->AddChild( m_pcBurnWriteDeviceString, 1.000000 );
m_pcBurnWriteDeviceSelection = new os::DropdownMenu( os::Rect(), "BurnWriteDeviceSelection" );
m_pcBurnWriteDeviceSelection->SetSelectionMessage( new os::Message( M_BURN_WRITEDEVICE ) );
m_pcBurnWriteDeviceSelection->SetReadOnly( true );
m_pcBurnWriteDeviceSelection->AppendItem( "Choose Device..." );
m_pcBurnWriteDeviceSelection->AppendItem( "ISO File" );
m_pcBurnWriteDeviceSelection->SetSelection( (int) 0 );
m_pcBurnWriteDevice->AddChild( m_pcBurnWriteDeviceSelection, 1.000000 );
m_pcBurnBurnSpacer1 = new os::VLayoutSpacer( "BurnBurnSpacer1", 0.000000, 100000.000000, NULL, 1.000000 );
m_pcBurnBurn->AddChild( m_pcBurnBurnSpacer1 );
m_pcBurnSpeed = new os::VLayoutNode( "BurnSpeed", 1.000000 );
m_pcBurnSpeed->SetBorders( os::Rect( 0.000000, 0.000000, 0.000000, 0.000000 ) );
m_pcBurnBurn->AddChild( m_pcBurnSpeed );
m_pcBurnSpeedSelection = new os::HLayoutNode( "BurnSpeedSelection", 1.000000 );
m_pcBurnSpeedSelection->SetBorders( os::Rect( 0.000000, 0.000000, 0.000000, 0.000000 ) );
m_pcBurnSpeed->AddChild( m_pcBurnSpeedSelection );
m_pcBurnSpeedString = new os::StringView( os::Rect(), "BurnSpeedString", "Write-speed:" );
m_pcBurnSpeedSelection->AddChild( m_pcBurnSpeedString, 1.000000 );
m_pcBurnSpeedSlider = new os::Slider( os::Rect(), "BurnSpeedSlider", new os::Message( M_BURN_SPEED ), os::Slider::TICKS_BELOW, 10, os::Slider::KNOB_SQUARE, os::HORIZONTAL );
m_pcBurnSpeedSlider->SetStepCount( 26 );
m_pcBurnSpeedSlider->SetTickCount( 11 );
m_pcBurnSpeedSlider->SetLimitLabels( "1x", "50x" );
m_pcBurnSpeedSlider->SetMinMax( 1.000000, 50.000000 );
m_pcBurnSpeedSelection->AddChild( m_pcBurnSpeedSlider, 1.000000 );
m_pcBurnSpeedCheckBox = new os::CheckBox( os::Rect(), "BurnSpeedCheckBox", "Max. write-speed.", new os::Message( M_BURN_MAXSPEED ) );
m_pcBurnSpeedCheckBox->SetValue( true );
m_pcBurnSpeed->AddChild( m_pcBurnSpeedCheckBox, 1.000000 );
m_pcBurnBurnSpacer2 = new os::VLayoutSpacer( "BurnBurnSpacer2", 0.000000, 100000.000000, NULL, 1.000000 );
m_pcBurnBurn->AddChild( m_pcBurnBurnSpacer2 );
m_pcBurnCopies = new os::HLayoutNode( "BurnCopies", 1.000000 );
m_pcBurnCopies->SetBorders( os::Rect( 0.000000, 0.000000, 0.000000, 0.000000 ) );
m_pcBurnBurn->AddChild( m_pcBurnCopies );
m_pcBurnCopiesString = new os::StringView( os::Rect(), "BurnCopiesString", "Number of copies to burn:" );
m_pcBurnCopies->AddChild( m_pcBurnCopiesString, 1.000000 );
m_pcBurnCopiesSpinner = new os::Spinner( os::Rect(), "BurnCopiesSpinner", 1.000000, new os::Message( M_BURN_COPIES ) );
m_pcBurnCopiesSpinner->SetMinMax( 1.000000, 25.000000 );
m_pcBurnCopiesSpinner->SetStep( 1.000000 );
m_pcBurnCopiesSpinner->SetFormat( "%.0f" );
m_pcBurnCopies->AddChild( m_pcBurnCopiesSpinner, 0.200000 );
m_pcBurnBurnSpacer3 = new os::VLayoutSpacer( "BurnBurnSpacer3", 0.000000, 100000.000000, NULL, 1.000000 );
m_pcBurnBurn->AddChild( m_pcBurnBurnSpacer3 );
m_pcBurnButton = new os::HLayoutNode( "BurnButton", 0.000001 );
m_pcBurnButton->SetBorders( os::Rect( 0.000000, 0.000000, 0.000000, 0.000000 ) );
m_pcBurnBurn->AddChild( m_pcBurnButton );
m_pcBurnBurnSpacer4 = new os::HLayoutSpacer( "BurnBurnSpacer4", 0.000000, 100000.000000, NULL, 1.000000 );
m_pcBurnButton->AddChild( m_pcBurnBurnSpacer4 );
os::File cBurnBurnButtonFile( open_image_file( get_image_id() ) );
os::Resources cBurnBurnButtonResources( &cBurnBurnButtonFile );
os::ResStream* pcBurnBurnButtonStream = cBurnBurnButtonResources.GetResourceStream( "burn.png" );
m_pcBurnBurnButton = new os::ImageButton( os::Rect(), "BurnBurnButton", "Burn", new os::Message( M_BURN_BURN ), new os::BitmapImage( pcBurnBurnButtonStream ), os::ImageButton::IB_TEXT_RIGHT, true, true, false );
delete( pcBurnBurnButtonStream );
m_pcBurnButton->AddChild( m_pcBurnBurnButton, 0.000001 );
m_pcBurnErase = new os::VLayoutNode( "BurnErase", 1.000000 );
m_pcBurnErase->SetBorders( os::Rect( 5.000000, 5.000000, 5.000000, 5.000000 ) );
m_pcBurnEraseLayout->AddChild( m_pcBurnErase );
m_pcBurnEraseDevice = new os::HLayoutNode( "BurnEraseDevice", 1.000000 );
m_pcBurnEraseDevice->SetBorders( os::Rect( 0.000000, 0.000000, 0.000000, 0.000000 ) );
m_pcBurnErase->AddChild( m_pcBurnEraseDevice );
m_pcBurnEraseDeviceString = new os::StringView( os::Rect(), "BurnEraseDeviceString", "Device:" );
m_pcBurnEraseDevice->AddChild( m_pcBurnEraseDeviceString, 1.000000 );
m_pcBurnEraseDeviceSelection = new os::DropdownMenu( os::Rect(), "BurnEraseDeviceSelection" );
m_pcBurnEraseDeviceSelection->SetSelectionMessage( new os::Message( M_BURN_ERASEDEVICE ) );
m_pcBurnEraseDeviceSelection->SetReadOnly( true );
m_pcBurnEraseDeviceSelection->AppendItem( "Choose Device..." );
m_pcBurnEraseDeviceSelection->SetSelection( (int) 0 );
m_pcBurnEraseDevice->AddChild( m_pcBurnEraseDeviceSelection, 1.000000 );
m_pcBurnEraseSpacer1 = new os::VLayoutSpacer( "BurnEraseSpacer1", 0.000000, 100000.000000, NULL, 1.000000 );
m_pcBurnErase->AddChild( m_pcBurnEraseSpacer1 );
m_pcBurnEraseModeNode = new os::HLayoutNode( "BurnEraseModeNode", 0.500000 );
m_pcBurnEraseModeNode->SetBorders( os::Rect( 0.000000, 0.000000, 0.000000, 0.000000 ) );
m_pcBurnErase->AddChild( m_pcBurnEraseModeNode );
m_pcEraseSpacer2 = new os::HLayoutSpacer( "EraseSpacer2", 0.000000, 100000.000000, NULL, 1.000000 );
m_pcBurnEraseModeNode->AddChild( m_pcEraseSpacer2 );
m_pcBurnEraseMode = new os::VLayoutNode( "BurnEraseMode", 1.000000 );
m_pcBurnEraseMode->SetBorders( os::Rect( 0.000000, 0.000000, 0.000000, 0.000000 ) );
m_pcBurnEraseModeNode->AddChild( m_pcBurnEraseMode );
m_pcBurnEraseModeFast = new os::RadioButton( os::Rect(), "BurnEraseModeFast", "Fast Erase.", new os::Message( M_BURN_FASTERASE ) );
m_pcBurnEraseModeFast->SetValue( true );
m_pcBurnEraseMode->AddChild( m_pcBurnEraseModeFast, 1.000000 );
m_pcBurnEraseModeFull = new os::RadioButton( os::Rect(), "BurnEraseModeFull", "Full Erase.", new os::Message( M_BURN_FULLERASE ) );
m_pcBurnEraseMode->AddChild( m_pcBurnEraseModeFull, 1.000000 );
m_pcBurnEraseSpacer3 = new os::VLayoutSpacer( "BurnEraseSpacer3", 0.000000, 100000.000000, NULL, 1.000000 );
m_pcBurnErase->AddChild( m_pcBurnEraseSpacer3 );
m_pcBurnEraseButton = new os::HLayoutNode( "BurnEraseButton", 0.000001 );
m_pcBurnEraseButton->SetBorders( os::Rect( 0.000000, 0.000000, 0.000000, 0.000000 ) );
m_pcBurnErase->AddChild( m_pcBurnEraseButton );
m_pcBurnEraseSpacer4 = new os::HLayoutSpacer( "BurnEraseSpacer4", 0.000000, 100000.000000, NULL, 1.000000 );
m_pcBurnEraseButton->AddChild( m_pcBurnEraseSpacer4 );
os::File cBurnEraseButFile( open_image_file( get_image_id() ) );
os::Resources cBurnEraseButResources( &cBurnEraseButFile );
os::ResStream* pcBurnEraseButStream = cBurnEraseButResources.GetResourceStream( "burn.png" );
m_pcBurnEraseBut = new os::ImageButton( os::Rect(), "BurnEraseBut", "Erase", new os::Message( M_BURN_ERASE ), new os::BitmapImage( pcBurnEraseButStream ), os::ImageButton::IB_TEXT_RIGHT, true, true, false );
delete( pcBurnEraseButStream );
m_pcBurnEraseButton->AddChild( m_pcBurnEraseBut, 0.000001 );
m_pcBurnBurnTab->SetRoot( m_pcBurnBurnLayout );
m_pcBurnEraseTab->SetRoot( m_pcBurnEraseLayout );

