os::String cBackupTab1 = os::String( "Backup" );
for( uint8 i = 0 ; i < 50 - strlen(cBackupTab1.c_str()) ; i++ )
	cBackupTab1 = cBackupTab1 + os::String(" ");
os::String cBackupTab2 = os::String( "Burn" );
for( uint8 i = 0 ; i < 50 - strlen(cBackupTab2.c_str()) ; i++ )
	cBackupTab2 = cBackupTab2 + os::String(" ");

m_pcBackup = new os::VLayoutNode( "Backup", 1.000000 );
m_pcBackup->SetBorders( os::Rect( 5.000000, 5.000000, 5.000000, 5.000000 ) );
m_pcBackupTabView = new os::TabView( os::Rect(), "BackupTabView" );
m_pcBackupAuthorTab = new os::LayoutView( os::Rect(), "BackupAuthorTab" );
m_pcBackupAuthorLayout = new os::VLayoutNode( "BackupAuthorLayout" );
m_pcBackupTabView->AppendTab( cBackupTab1, m_pcBackupAuthorTab );
m_pcBackupBurnTab = new os::LayoutView( os::Rect(), "BackupBurnTab" );
m_pcBackupBurnLayout = new os::VLayoutNode( "BackupBurnLayout" );
m_pcBackupTabView->AppendTab( cBackupTab2, m_pcBackupBurnTab );
m_pcBackup->AddChild( m_pcBackupTabView, 1.000000 );
m_pcBackupAuthor = new os::VLayoutNode( "BackupAuthor", 1.000000 );
m_pcBackupAuthor->SetBorders( os::Rect( 25.000000, 5.000000, 5.000000, 5.000000 ) );
m_pcBackupAuthorLayout->AddChild( m_pcBackupAuthor );
m_pcBackupAuthorSpacer1 = new os::VLayoutSpacer( "BackupAuthorSpacer1", 0.000000, 100000.000000, NULL, 1.000000 );
m_pcBackupAuthor->AddChild( m_pcBackupAuthorSpacer1 );
m_pcBackupSelectMail = new os::CheckBox( os::Rect(), "BackupSelectMail", "Mail", new os::Message( M_BACKUP_SELECT ) );
m_pcBackupSelectMail->SetValue( false );
m_pcBackupAuthor->AddChild( m_pcBackupSelectMail, 1.000000 );
m_pcBackupSelectBookmarks = new os::CheckBox( os::Rect(), "BackupSelectBookmarks", "Bookmarks", new os::Message( M_BACKUP_SELECT ) );
m_pcBackupSelectBookmarks->SetValue( false );
m_pcBackupAuthor->AddChild( m_pcBackupSelectBookmarks, 1.000000 );
m_pcBackupSelectContacts = new os::CheckBox( os::Rect(), "BackupSelectContacts", "Contacts", new os::Message( M_BACKUP_SELECT ) );
m_pcBackupSelectContacts->SetValue( false );
m_pcBackupAuthor->AddChild( m_pcBackupSelectContacts, 1.000000 );
m_pcBackupAuthorSpacer2 = new os::VLayoutSpacer( "BackupAuthorSpacer2", 5.000000, 100000.000000, NULL, 0.500000 );
m_pcBackupAuthor->AddChild( m_pcBackupAuthorSpacer2 );
m_pcBackupSelectDocuments = new os::CheckBox( os::Rect(), "BackupSelectDocuments", "Documents", new os::Message( M_BACKUP_SELECT ) );
m_pcBackupSelectDocuments->SetValue( false );
m_pcBackupAuthor->AddChild( m_pcBackupSelectDocuments, 1.000000 );
m_pcBackupSelectPictures = new os::CheckBox( os::Rect(), "BackupSelectPictures", "Pictures", new os::Message( M_BACKUP_SELECT ) );
m_pcBackupSelectPictures->SetValue( false );
m_pcBackupAuthor->AddChild( m_pcBackupSelectPictures, 1.000000 );
m_pcBackupSelectMusic = new os::CheckBox( os::Rect(), "BackupSelectMusic", "Music", new os::Message( M_BACKUP_SELECT ) );
m_pcBackupSelectMusic->SetValue( false );
m_pcBackupAuthor->AddChild( m_pcBackupSelectMusic, 1.000000 );
m_pcBackupSelectMovies = new os::CheckBox( os::Rect(), "BackupSelectMovies", "Movies", new os::Message( M_BACKUP_SELECT ) );
m_pcBackupSelectMovies->SetValue( false );
m_pcBackupAuthor->AddChild( m_pcBackupSelectMovies, 1.000000 );
m_pcBackupAuthorSpacer3 = new os::VLayoutSpacer( "BackupAuthorSpacer3", 5.000000, 100000.000000, NULL, 0.500000 );
m_pcBackupAuthor->AddChild( m_pcBackupAuthorSpacer3 );
m_pcBackupSelectSettings = new os::CheckBox( os::Rect(), "BackupSelectSettings", "Settings", new os::Message( M_BACKUP_SELECT ) );
m_pcBackupSelectSettings->SetValue( false );
m_pcBackupAuthor->AddChild( m_pcBackupSelectSettings, 1.000000 );
m_pcBackupAuthorSpacer4 = new os::VLayoutSpacer( "BackupAuthorSpacer4", 10.000000, 100000.000000, NULL, 1.000000 );
m_pcBackupAuthor->AddChild( m_pcBackupAuthorSpacer4 );
m_pcBackupSelectEverything = new os::CheckBox( os::Rect(), "BackupSelectEverything", "Everything", new os::Message( M_BACKUP_SELECT ) );
m_pcBackupSelectEverything->SetValue( true );
m_pcBackupAuthor->AddChild( m_pcBackupSelectEverything, 1.000000 );
m_pcBackupAuthorSpacer5 = new os::VLayoutSpacer( "BackupAuthorSpacer5", 0.000000, 100000.000000, NULL, 1.000000 );
m_pcBackupAuthor->AddChild( m_pcBackupAuthorSpacer5 );
m_pcBackupBurn = new os::VLayoutNode( "BackupBurn", 1.000000 );
m_pcBackupBurn->SetBorders( os::Rect( 5.000000, 5.000000, 5.000000, 5.000000 ) );
m_pcBackupBurnLayout->AddChild( m_pcBackupBurn );
m_pcBackupWriteDevice = new os::HLayoutNode( "BackupWriteDevice", 1.000000 );
m_pcBackupWriteDevice->SetBorders( os::Rect( 0.000000, 0.000000, 0.000000, 0.000000 ) );
m_pcBackupBurn->AddChild( m_pcBackupWriteDevice );
m_pcBackupWriteDeviceString = new os::StringView( os::Rect(), "BackupWriteDeviceString", "Device:" );
m_pcBackupWriteDevice->AddChild( m_pcBackupWriteDeviceString, 1.000000 );
m_pcBackupWriteDeviceSelection = new os::DropdownMenu( os::Rect(), "BackupWriteDeviceSelection" );
m_pcBackupWriteDeviceSelection->SetSelectionMessage( new os::Message( M_BACKUP_WRITEDEVICE ) );
m_pcBackupWriteDeviceSelection->SetReadOnly( true );
m_pcBackupWriteDeviceSelection->AppendItem( "Choose Device..." );
m_pcBackupWriteDeviceSelection->AppendItem( "ISO File" );
m_pcBackupWriteDeviceSelection->SetSelection( (int) 0 );
m_pcBackupWriteDevice->AddChild( m_pcBackupWriteDeviceSelection, 1.000000 );
m_pcBackupBurnSpacer1 = new os::VLayoutSpacer( "BackupBurnSpacer1", 0.000000, 100000.000000, NULL, 1.000000 );
m_pcBackupBurn->AddChild( m_pcBackupBurnSpacer1 );
m_pcBackupSpeed = new os::VLayoutNode( "BackupSpeed", 1.000000 );
m_pcBackupSpeed->SetBorders( os::Rect( 0.000000, 0.000000, 0.000000, 0.000000 ) );
m_pcBackupBurn->AddChild( m_pcBackupSpeed );
m_pcBackupSpeedSelection = new os::HLayoutNode( "BackupSpeedSelection", 1.000000 );
m_pcBackupSpeedSelection->SetBorders( os::Rect( 0.000000, 0.000000, 0.000000, 0.000000 ) );
m_pcBackupSpeed->AddChild( m_pcBackupSpeedSelection );
m_pcBackupSpeedString = new os::StringView( os::Rect(), "BackupSpeedString", "Write-speed:" );
m_pcBackupSpeedSelection->AddChild( m_pcBackupSpeedString, 1.000000 );
m_pcBackupSpeedSlider = new os::Slider( os::Rect(), "BackupSpeedSlider", new os::Message( M_BACKUP_SPEED ), os::Slider::TICKS_BELOW, 10, os::Slider::KNOB_SQUARE, os::HORIZONTAL );
m_pcBackupSpeedSlider->SetStepCount( 26 );
m_pcBackupSpeedSlider->SetTickCount( 11 );
m_pcBackupSpeedSlider->SetLimitLabels( "1x", "50x" );
m_pcBackupSpeedSlider->SetMinMax( 1.000000, 50.000000 );
m_pcBackupSpeedSelection->AddChild( m_pcBackupSpeedSlider, 1.000000 );
m_pcBackupSpeedCheckBox = new os::CheckBox( os::Rect(), "BackupSpeedCheckBox", "Max. write-speed.", new os::Message( M_BACKUP_MAXSPEED ) );
m_pcBackupSpeedCheckBox->SetValue( true );
m_pcBackupSpeed->AddChild( m_pcBackupSpeedCheckBox, 1.000000 );
m_pcBackupBurnSpacer2 = new os::VLayoutSpacer( "BackupBurnSpacer2", 0.000000, 100000.000000, NULL, 1.000000 );
m_pcBackupBurn->AddChild( m_pcBackupBurnSpacer2 );
m_pcBackupCopies = new os::HLayoutNode( "BackupCopies", 1.000000 );
m_pcBackupCopies->SetBorders( os::Rect( 0.000000, 0.000000, 0.000000, 0.000000 ) );
m_pcBackupBurn->AddChild( m_pcBackupCopies );
m_pcBackupCopiesString = new os::StringView( os::Rect(), "BackupCopiesString", "Number of copies to burn:" );
m_pcBackupCopies->AddChild( m_pcBackupCopiesString, 1.000000 );
m_pcBackupCopiesSpinner = new os::Spinner( os::Rect(), "BackupCopiesSpinner", 1.000000, new os::Message( M_BACKUP_COPIES ) );
m_pcBackupCopiesSpinner->SetMinMax( 1.000000, 25.000000 );
m_pcBackupCopiesSpinner->SetStep( 1.000000 );
m_pcBackupCopiesSpinner->SetFormat( "%.0f" );
m_pcBackupCopies->AddChild( m_pcBackupCopiesSpinner, 0.200000 );
m_pcBackupBurnSpacer3 = new os::VLayoutSpacer( "BackupBurnSpacer3", 0.000000, 100000.000000, NULL, 1.000000 );
m_pcBackupBurn->AddChild( m_pcBackupBurnSpacer3 );
m_pcBackupDiskName = new os::HLayoutNode( "BackupDiskName", 1.000000 );
m_pcBackupDiskName->SetBorders( os::Rect( 0.000000, 0.000000, 0.000000, 0.000000 ) );
m_pcBackupBurn->AddChild( m_pcBackupDiskName );
m_pcBackupDiskNameString = new os::StringView( os::Rect(), "BackupDiskNameString", "Volume Name:" );
m_pcBackupDiskName->AddChild( m_pcBackupDiskNameString, 1.000000 );
m_pcBackupDiskNameText = new os::TextView( os::Rect(), "BackupDiskNameText", "Backup" );
m_pcBackupDiskName->AddChild( m_pcBackupDiskNameText, 1.000000 );
m_pcBackupBurnSpacer4 = new os::VLayoutSpacer( "BackupBurnSpacer4", 0.000000, 100000.000000, NULL, 1.000000 );
m_pcBackupBurn->AddChild( m_pcBackupBurnSpacer4 );
m_pcBackupButton = new os::HLayoutNode( "BackupButton", 0.000001 );
m_pcBackupButton->SetBorders( os::Rect( 0.000000, 0.000000, 0.000000, 0.000000 ) );
m_pcBackupBurn->AddChild( m_pcBackupButton );
m_pcBackupBurnSpacer5 = new os::HLayoutSpacer( "BackupBurnSpacer5", 0.000000, 100000.000000, NULL, 1.000000 );
m_pcBackupButton->AddChild( m_pcBackupBurnSpacer5 );
os::File cBackupBurnButtonFile( open_image_file( get_image_id() ) );
os::Resources cBackupBurnButtonResources( &cBackupBurnButtonFile );
os::ResStream* pcBackupBurnButtonStream = cBackupBurnButtonResources.GetResourceStream( "burn.png" );
m_pcBackupBurnButton = new os::ImageButton( os::Rect(), "BackupBurnButton", "Burn", new os::Message( M_BACKUP_BURN ), new os::BitmapImage( pcBackupBurnButtonStream ), os::ImageButton::IB_TEXT_RIGHT, true, true, false );
delete( pcBackupBurnButtonStream );
m_pcBackupButton->AddChild( m_pcBackupBurnButton, 0.000001 );
m_pcBackupAuthorTab->SetRoot( m_pcBackupAuthorLayout );
m_pcBackupBurnTab->SetRoot( m_pcBackupBurnLayout );

