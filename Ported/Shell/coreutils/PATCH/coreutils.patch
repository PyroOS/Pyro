diff -ru coreutils-6.9.original/lib/fsusage.c coreutils-6.9/lib/fsusage.c
--- coreutils-6.9.original/lib/fsusage.c	2007-01-14 12:32:10.000000000 +0100
+++ coreutils-6.9/lib/fsusage.c	2007-12-03 14:35:35.000000000 +0100
@@ -24,6 +24,10 @@
 #include <limits.h>
 #include <sys/types.h>
 
+#ifdef __PYRO__
+# include <pyro/filesystem.h>
+#endif
+
 #if STAT_STATVFS		/* POSIX 1003.1-2001 (and later) with XSI */
 # include <sys/statvfs.h>
 #else
@@ -95,6 +99,28 @@
 int
 get_fs_usage (char const *file, char const *disk, struct fs_usage *fsp)
 {
+#ifdef __PYRO__
+  fs_info info;
+  int mnt;
+
+  mnt = open( path, O_RDONLY );
+  if ( mnt < 0 ) {
+    return -1;
+  }
+  if ( get_fs_info( mnt, &info ) < 0 ) {
+    close( mnt );
+    return -1;
+  }
+  close( mnt );
+  fsp->fsu_blocksize = info.fi_block_size;
+  fsp->fsu_blocks = PROPAGATE_ALL_ONES (info.fi_total_blocks);
+  fsp->fsu_bfree = PROPAGATE_ALL_ONES (info.fi_free_blocks);
+  fsp->fsu_bavail = PROPAGATE_TOP_BIT (info.fi_free_user_blocks);
+  fsp->fsu_bavail_top_bit_set = EXTRACT_TOP_BIT (info.fi_free_user_blocks) != 0;
+  fsp->fsu_files = PROPAGATE_ALL_ONES (info.fi_total_inodes);
+  fsp->fsu_ffree = PROPAGATE_ALL_ONES (info.fi_free_inodes);
+#endif
+
 #if defined STAT_STATVFS		/* POSIX */
 
   struct statvfs fsd;
@@ -222,7 +248,7 @@
 #endif
 
 #if (defined STAT_STATVFS \
-     || (!defined STAT_STATFS2_FS_DATA && !defined STAT_READ_FILSYS))
+     || (!defined STAT_STATFS2_FS_DATA && !defined STAT_READ_FILSYS && !defined __PYRO__))
 
   fsp->fsu_blocks = PROPAGATE_ALL_ONES (fsd.f_blocks);
   fsp->fsu_bfree = PROPAGATE_ALL_ONES (fsd.f_bfree);
diff -ru coreutils-6.9.original/lib/mountlist.c coreutils-6.9/lib/mountlist.c
--- coreutils-6.9.original/lib/mountlist.c	2007-01-26 23:16:55.000000000 +0100
+++ coreutils-6.9/lib/mountlist.c	2007-12-03 14:40:43.000000000 +0100
@@ -34,6 +34,10 @@
 
 #include <unistd.h>
 
+#ifdef __PYRO__
+# include <pyro/filesystem.h>
+#endif
+
 #if HAVE_SYS_PARAM_H
 # include <sys/param.h>
 #endif
@@ -346,6 +350,51 @@
   struct mount_entry *me;
   struct mount_entry **mtail = &mount_list;
 
+#ifdef __PYRO__
+  {
+    int count = get_mount_point_count();
+    int i;
+
+    if ( count < 0 ) {
+      return -1;
+    }
+    for ( i = 0 ; i < count ; ++i )
+    {
+      fs_info info;
+      int mnt;
+      char path[PATH_MAX];
+
+      if ( get_mount_point( i, path, PATH_MAX ) < 0 ) {
+        goto free_then_fail;
+      }
+
+      mnt = open( path, O_RDONLY );
+      if ( mnt < 0 ) {
+        goto free_then_fail;
+      }
+      if ( get_fs_info( mnt, &info ) < 0 ) {
+        close( mnt );
+        continue;
+      }
+      close( mnt );
+
+      me = (struct mount_entry *) xmalloc (sizeof (struct mount_entry));
+      me->me_devname = xstrdup (info.fi_device_path);
+      me->me_mountdir = xstrdup (path);
+      me->me_type = xstrdup (info.fi_driver_name);
+      me->me_dummy = ME_DUMMY (info.fi_device_path, info.fi_driver_name);
+      me->me_remote = (info.fi_flags & FS_IS_SHARED) != 0;
+      me->me_dev = info.fi_dev;
+
+      /* Add to the linked list. */
+      *mtail = me;
+      mtail = &me->me_next;
+    }
+    *mtail = NULL;
+    return( mount_list );
+  }
+#endif
+
 #ifdef MOUNTED_LISTMNTENT
   {
     struct tabmntent *mntlist, *p;
diff -ru coreutils-6.9.original/man/Makefile.in coreutils-6.9/man/Makefile.in
--- coreutils-6.9.original/man/Makefile.in	2007-03-22 22:20:22.000000000 +0100
+++ coreutils-6.9/man/Makefile.in	2007-12-03 14:35:35.000000000 +0100
@@ -762,7 +762,9 @@
 cut.1:		$(common_dep)	$(srcdir)/cut.x		../src/cut.c
 date.1:		$(common_dep)	$(srcdir)/date.x	../src/date.c
 dd.1:		$(common_dep)	$(srcdir)/dd.x		../src/dd.c
-df.1:		$(common_dep)	$(srcdir)/df.x		../src/df.c
+df.1:
+# df is not built on Pyro.
+#		$(common_dep)	$(srcdir)/df.x		../src/df.c
 
 # Note that dir depends on ls.c, since that's where it's --help text is.
 dir.1:		$(common_dep)	$(srcdir)/dir.x		../src/ls.c
diff -ru coreutils-6.9.original/src/copy.c coreutils-6.9/src/copy.c
--- coreutils-6.9.original/src/copy.c	2007-03-18 22:36:43.000000000 +0100
+++ coreutils-6.9/src/copy.c	2007-12-03 14:35:35.000000000 +0100
@@ -54,6 +54,78 @@
 #include "xreadlink.h"
 #include "yesno.h"
 
+/* Pyro patch for extended attributes handling
+   2002 by Sebastien Keim
+*/
+#ifdef __PYRO__
+
+#include <pyro/fs_attribs.h>
+
+/* Copy src_path attributes to dst_path
+     dst_path must exist
+   dst_path arguments are not removed
+*/
+
+#define CPATTR_BUF_SIZE 1024
+
+int cp_attribs (const char* src_path, const char* dst_path)
+{
+  int  nSrcFile = -1;
+  DIR* pSrcDir = NULL;
+  int  nDstFile = -1;
+  bool status = 1;
+
+  struct dirent* psEntry;
+
+  nSrcFile = open (src_path, O_RDWR);
+  nDstFile = open (dst_path, O_RDWR);
+  if (nSrcFile < 0 || nDstFile < 0)
+    goto END_CP; /* Failed to open source or dest file */
+
+  pSrcDir = open_attrdir (nSrcFile);
+  if (NULL == pSrcDir)
+    goto END_CP; /* Failed to open source attrib dir */
+
+  while (psEntry = read_attrdir (pSrcDir))
+  {
+    attr_info_s sInfo;
+
+    if (stat_attr (nSrcFile, psEntry->d_name, &sInfo) == 0)
+    {
+      char zBuffer[CPATTR_BUF_SIZE];
+      int index=0;
+      int length;
+      while (length = (index+CPATTR_BUF_SIZE < sInfo.ai_size ?
+        CPATTR_BUF_SIZE :
+        sInfo.ai_size-index))
+      {
+        if (read_attr (nSrcFile, psEntry->d_name, sInfo.ai_type, zBuffer,
+            index, length ) != length)
+          goto END_CP; /* Failed to read attribute */
+
+        write_attr (nDstFile, psEntry->d_name, O_TRUNC, sInfo.ai_type,
+          zBuffer, index, length);
+        index+=length;
+      }
+    } 
+    else 
+    {
+      /* Failed to stat attrib */
+      goto END_CP;
+    }
+  }
+  status = 0;
+
+END_CP:
+  close (nSrcFile);
+  close (nDstFile);
+  if (pSrcDir != NULL)
+    close_attrdir (pSrcDir);
+  return status;
+}
+
+#endif /* __PYRO__ */
+
 #ifndef HAVE_FCHOWN
 # define HAVE_FCHOWN false
 # define fchown(fd, uid, gid) (-1)
@@ -1794,6 +1866,12 @@
   if (command_line_arg)
     record_file (x->dest_info, dst_name, NULL);
 
+#ifdef __PYRO__
+  /* Copy extended file attributes */
+  if (delayed_ok)
+    cp_attribs (src_name, dst_name);
+#endif
+
   if ( ! preserve_metadata)
     return true;
 
diff -ru coreutils-6.9.original/src/df.c coreutils-6.9/src/df.c
--- coreutils-6.9.original/src/df.c	2007-03-18 22:36:43.000000000 +0100
+++ coreutils-6.9/src/df.c	2007-12-03 14:35:35.000000000 +0100
@@ -329,19 +329,19 @@
     {
       size_t disk_name_len = strlen (disk);
       size_t fstype_len = strlen (fstype);
-      if (disk_name_len + fstype_len < 18)
-	printf ("%s%*s  ", disk, 18 - (int) disk_name_len, fstype);
+      if (disk_name_len + fstype_len < 28)
+	printf ("%s%*s  ", disk, 28 - (int) disk_name_len, fstype);
       else if (!posix_format)
-	printf ("%s\n%18s  ", disk, fstype);
+	printf ("%s\n%28s  ", disk, fstype);
       else
 	printf ("%s %s", disk, fstype);
     }
   else
     {
-      if (strlen (disk) > 20 && !posix_format)
-	printf ("%s\n%20s", disk, "");
+      if (strlen (disk) > 30 && !posix_format)
+	printf ("%s\n%30s", disk, "");
       else
-	printf ("%-20s", disk);
+	printf ("%-30s", disk);
     }
 
   if (inode_format)
diff -ru coreutils-6.9.original/src/du.c coreutils-6.9/src/du.c
--- coreutils-6.9.original/src/du.c	2007-03-18 22:36:43.000000000 +0100
+++ coreutils-6.9/src/du.c	2007-12-03 14:35:35.000000000 +0100
@@ -526,7 +526,9 @@
   if (skip
       || (!opt_count_all
 	  && ! S_ISDIR (sb->st_mode)
+#ifndef __PYRO__
 	  && 1 < sb->st_nlink
+#endif
 	  && ! hash_ins (sb->st_ino, sb->st_dev)))
     {
       /* Note that we must not simply return here.
diff -ru coreutils-6.9.original/src/system.h coreutils-6.9/src/system.h
--- coreutils-6.9.original/src/system.h	2007-03-18 22:36:43.000000000 +0100
+++ coreutils-6.9/src/system.h	2007-12-03 14:35:35.000000000 +0100
@@ -111,7 +111,12 @@
 # define ENOSYS (-1)
 #endif
 
-#include <stdbool.h>
+#ifdef __PYRO__
+# include <pyro/types.h>
+#else
+# include <stdbool.h>
+#endif
+
 #include <stdlib.h>
 
 /* Exit statuses for programs like 'env' that exec other programs.
@@ -218,8 +223,12 @@
 # endif /* !hpux */
 #endif /* HAVE_STRUCT_STAT_ST_BLOCKS */
 
-#ifndef ST_NBLOCKS
-# define ST_NBLOCKS(statbuf) ((statbuf).st_blocks)
+#ifdef __PYRO__
+# define ST_NBLOCKS(statbuf) ((statbuf).st_size / ST_NBLOCKSIZE + ((statbuf).st_size % ST_NBLOCKSIZE != 0))
+#else
+# ifndef ST_NBLOCKS
+#  define ST_NBLOCKS(statbuf) ((statbuf).st_blocks)
+# endif
 #endif
 
 #ifndef ST_NBLOCKSIZE
