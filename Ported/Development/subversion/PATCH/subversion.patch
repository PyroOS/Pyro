diff -ru subversion-1.0.5.original/apr/configure subversion-1.0.5/apr/configure
--- subversion-1.0.5.original/apr/configure	2004-06-10 18:17:08.000000000 +0000
+++ subversion-1.0.5/apr/configure	2004-07-06 16:20:53.000000000 +0000
@@ -16736,7 +16736,7 @@
 fi
 
 ac_rc=yes
-for ac_spec in header:kernel/OS.h func:create_area; do
+for ac_spec in func:create_area; do
     ac_type=`echo "$ac_spec" | sed -e 's/:.*$//'`
     ac_item=`echo "$ac_spec" | sed -e 's/^.*://'`
     case $ac_type in
@@ -16967,7 +16967,7 @@
 fi
 
 ac_rc=yes
-for ac_spec in header:kernel/OS.h func:create_area; do
+for ac_spec in func:create_area; do
     ac_type=`echo "$ac_spec" | sed -e 's/:.*$//'`
     ac_item=`echo "$ac_spec" | sed -e 's/^.*://'`
     case $ac_type in
diff -ru subversion-1.0.5.original/apr/shmem/beos/shm.c subversion-1.0.5/apr/shmem/beos/shm.c
--- subversion-1.0.5.original/apr/shmem/beos/shm.c	2004-06-10 18:16:53.000000000 +0000
+++ subversion-1.0.5/apr/shmem/beos/shm.c	2004-07-06 16:04:14.000000000 +0000
@@ -20,7 +20,14 @@
 #include "apr_strings.h"
 #include <stdio.h>
 #include <stdlib.h>
-#include <kernel/OS.h>
+
+#ifdef __SYLLABLE__
+  #include <pyro/areas.h>
+  #define B_PAGE_SIZE PAGE_SIZE
+#else
+  #include <kernel/OS.h>
+#endif
+
 #include "apr_portable.h"
 
 struct apr_shm_t {
@@ -41,12 +48,22 @@
     area_id newid;
     char *addr;
     
+#ifdef __SYLLABLE__
+    if (file != NULL)
+      return APR_ENOTIMPL;
+#endif
+
     (*m) = (apr_shm_t *)apr_pcalloc(p, sizeof(apr_shm_t));
     /* we MUST allocate in pages, so calculate how big an area we need... */
     pagesize = ((reqsize + B_PAGE_SIZE - 1) / B_PAGE_SIZE) * B_PAGE_SIZE;
-     
+
+#ifdef __SYLLABLE__
+    newid = create_area("apr_shmem", (void*)&addr, pagesize,
+                        AREA_ANY_ADDRESS | AREA_READ | AREA_WRITE, AREA_CONTIGUOUS);
+#else
     newid = create_area("apr_shmem", (void*)&addr, B_ANY_ADDRESS,
                         pagesize, B_CONTIGUOUS, B_READ_AREA|B_WRITE_AREA);
+#endif
 
     if (newid < 0)
         return errno;
@@ -74,6 +91,9 @@
                                          const char *filename,
                                          apr_pool_t *pool)
 {
+#ifdef __SYLLABLE__
+    return APR_ENOTIMPL;
+#else
     area_info ai;
     thread_info ti;
     area_id deleteme;
@@ -111,6 +131,7 @@
     (*m) = new_m;
     
     return APR_SUCCESS;
+#endif
 }
 
 APR_DECLARE(apr_status_t) apr_shm_detach(apr_shm_t *m)
